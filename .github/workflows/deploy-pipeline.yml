name: Deploy data pipeline

# Action will run on pushes to selected branches
on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  deployments: write

jobs:
  deploy:
    runs-on: ubuntu-22.04
    
    env:
      SNOWFLAKE_ACCOUNT: ${{ vars.SNOWFLAKE_ACCOUNT }}
      REPO_NAME: snowflake_devops
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read Changelog Content
        id: changelog_content
        shell: bash
        run: |
          # Read the content of changelog.md and store it in a variable
          CHANGES=$(cat ./changelog.md)
          ESCAPED_CHANGES=$(echo "$CHANGES" | sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/\\n/g' -e 's/"/\\"/g')
          echo "changelog_content=$ESCAPED_CHANGES"
          echo "changelog_content=$ESCAPED_CHANGES" >> $GITHUB_OUTPUT

      - name: Echo Changelog Content
        run: |
          echo changelog: "${{ steps.changelog_content.outputs.changelog_content }}"

      - name: Send Slack Message
        uses: act10ns/slack@v2.0.0
        env:
          SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/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"
        with:
          status: ${{ job.status }}
          webhook-url: ${{ env.SLACK_WEBHOOK_URL }}
          message: |
            Successfully Deployed to Production: - <{run_url} | View Run Log>
            Pipeline URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            ChangeLog: ${{ steps.changelog_content.outputs.changelog_content }}
    
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
    
      - name: Install dependencies
        run: |
          pip install pyjwt cryptography

      - name: Install Dependencies
        run: pip install jinja2-cli

      - name: Decode private key
        id: decode-private-key
        run: |
          # Decode the Base64-encoded private key
          echo "${{ secrets.SNOWFLAKE_PRIVATE_KEY_BASE64 }}" | base64 --decode > rsa_key.p8

      - name: Generate Snowflake config.toml
        run: |
          mkdir -p .snowflake
          cat <<EOF > .snowflake/config.toml      
          [connections]
          [connections.workflow]
          account = "${{ vars.SNOWFLAKE_ACCOUNT }}"
          user = "${{ vars.SNOWFLAKE_DEVOPS_USER }}"
          role = "${{ vars.SNOWFLAKE_DEVOPS_ROLE }}"
          authenticator = "${{ vars.SNOWFLAKE_DEFAULT_AUTHENTICATOR }}"
          warehouse = "${{ vars.SNOWFLAKE_DEVOPS_WAREHOUSE }}"
          database = "${{ vars.SNOWFLAKE_DEVOPS_DB }}"
          schema = "${{ vars.SNOWFLAKE_DEVOPS_SCHEMA }}"
          private_key_file = "rsa_key.p8"
          EOF

      - name: Updated Permission for config.toml
        run: |
          chmod 0600 .snowflake/config.toml
          chown $USER .snowflake/config.toml

      - name: Install Snowflake CLI
        uses: Snowflake-Labs/snowflake-cli-action@v1.5
        with:
          cli-version: "latest"
          default-config-file-path: ".snowflake/config.toml"

      - name: Generate JWT and Fingerprint
        id: generate-jwt
        env:
          SNOWFLAKE_PRIVATE_KEY_PASSWORD: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ vars.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_DEVOPS_USER: ${{ vars.SNOWFLAKE_DEVOPS_USER }}
        run: |
          python ./scripts/generate_jwt.py

      - name: Perform a Snowflake connectivity test
        env:
          SNOWFLAKE_CONNECTIONS_DEFAULT_JWT: ${{ env.JWT }}
          PRIVATE_KEY_PASSPHRASE: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_PASSWORD }}
        run: |
          snow connection list
          snow connection test -c workflow --debug

      # - name: Fetch repository changes
      #   env:
      #     SNOWFLAKE_CONNECTIONS_DEFAULT_JWT: ${{ env.JWT }}
      #     PRIVATE_KEY_PASSPHRASE: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_PASSWORD }}
      #   run: snow git fetch snowflake_devops -c workflow --debug

      # - name: Run Setup snowflake sql
      #   env:
      #     SNOWFLAKE_CONNECTIONS_DEFAULT_JWT: ${{ env.JWT }}
      #     SNOWFLAKE_DEBUG: true  # Enable debugging
      #     PRIVATE_KEY_PASSPHRASE: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_PASSWORD }}
      #   run: |
      #     BRANCH_NAME="main"
      #     if [ "${BRANCH_NAME}" == "main" ]; then
      #       RETENTION_TIME=1
      #     else
      #       RETENTION_TIME=0
      #     fi
      #     snow git execute \
      #       "@${REPO_NAME}/branches/${BRANCH_NAME}/steps/0[134]_*" \
      #       -D "environment='${BRANCH_NAME}'" \
      #       -D "retention_time=${RETENTION_TIME}"